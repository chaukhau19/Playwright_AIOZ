name: Playwright CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *' # Runs at 3:00 AM UTC daily

env:
  DEPLOY_ENV: 'Local' 

jobs:
  build-and-test-playwright:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          rm -rf node_modules package-lock.json yarn.lock
          npm install -g yarn
          yarn install
          npx playwright install --with-deps
          yarn add @playwright/test@latest @tenkeylabs/dappwright
          npm dedupe

      - name: Check versions
        run: |
          node -v
          npm -v
          yarn -v
          node -v
          playwright --version
          npm playwright --version
          yarn playwright --version
          npx playwright --version
          npm list @playwright/test

      - name: List directory contents
        run: ls -la

      - name: Rename Playwright Chromium
        run: |
          CHROMIUM_PATH="$HOME/.cache/ms-playwright"
          OLD_NAME1="chromium-1155"
          NEW_NAME1="chromium-1148"
          OLD_NAME2="chromium_headless_shell-1155"
          NEW_NAME2="chromium_headless_shell-1148"

          echo "🔍 Checking if $OLD_NAME1 exists..."
          if [ -d "$CHROMIUM_PATH/$OLD_NAME1" ]; then
            echo "🔄 Renaming $OLD_NAME1 to $NEW_NAME1..."
            mv "$CHROMIUM_PATH/$OLD_NAME1" "$CHROMIUM_PATH/$NEW_NAME1"
            echo "Rename completed!"
          else
            echo "$OLD_NAME1 not found, skipping rename."
          fi

          echo "🔍 Checking if $OLD_NAME2 exists..."
          if [ -d "$CHROMIUM_PATH/$OLD_NAME2" ]; then
            echo "🔄 Renaming $OLD_NAME2 to $NEW_NAME2..."
            mv "$CHROMIUM_PATH/$OLD_NAME2" "$CHROMIUM_PATH/$NEW_NAME2"
            echo "Rename completed!"
          else
            echo "$OLD_NAME2 not found, skipping rename."
          fi

      - name: Start Xvfb
        run: |
          sudo apt-get update && sudo apt-get install -y xvfb
          Xvfb :99 -ac & echo "Xvfb started"

      - name: Run Playwright tests
        run: |
          export DISPLAY=:99
          yarn test:All --workers=1

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-playwright_aioz
          path: ./playwright-report/

      - name: Deploy to Test Environment for PLAYWRIGHT_AIOZ
        if: env.DEPLOY_ENV == 'Test' && success()
        env:
          DEPLOY_HOST: ${{ secrets.TEST_DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.TEST_DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $GITHUB_WORKSPACE/PLAYWRIGHT_AIOZ && git pull origin main && yarn install && yarn build"

      - name: Deploy to Staging Environment for PLAYWRIGHT_AIOZ
        if: env.DEPLOY_ENV == 'Staging' && success()
        env:
          DEPLOY_HOST: ${{ secrets.STAGING_DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.STAGING_DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $GITHUB_WORKSPACE/PLAYWRIGHT_AIOZ && git pull origin main && yarn install && yarn build"

      - name: Deploy to Dev Environment for PLAYWRIGHT_AIOZ
        if: env.DEPLOY_ENV == 'Dev' && success()
        env:
          DEPLOY_HOST: ${{ secrets.DEV_DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEV_DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $GITHUB_WORKSPACE/PLAYWRIGHT_AIOZ && git pull origin main && yarn install && yarn build"

      - name: Deploy to Local Environment for PLAYWRIGHT_AIOZ
        if: env.DEPLOY_ENV == 'Local' && success()
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "Deploying to local environment for PLAYWRIGHT_AIOZ"
          echo "DEPLOY_HOST: $DEPLOY_HOST"
          echo "DEPLOY_USER: $DEPLOY_USER"
